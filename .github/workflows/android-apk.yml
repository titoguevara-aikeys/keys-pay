
name: Android APK & AAB with Daily Auto-versioning

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-apks-and-aab:
    runs-on: ubuntu-latest
    env:
      ANDROID_KEYSTORE_PATH: keystore.jks
      AIKEYS_BASE_URL: https://keys-pay.com
      PACKAGE_NAME: com.aikeys.wallet

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch tags for versioning
        run: git fetch --tags || echo "No tags found"

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Make Gradle wrapper executable
        working-directory: android
        run: chmod +x ./gradlew

      # Debug APK
      - name: Build Debug APK
        working-directory: android
        run: ./gradlew assembleDebug --no-daemon
        
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: AIKEYS-debug.apk
          path: android/app/build/outputs/apk/debug/*.apk

      # Prepare Keystore
      - name: Prepare Release Keystore
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        working-directory: android
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > "${ANDROID_KEYSTORE_PATH}"

      # Signed Release APK
      - name: Build Release APK
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        working-directory: android
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: ./gradlew assembleRelease --no-daemon
        
      - name: Upload Release APK
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: AIKEYS-release-signed.apk
          path: android/app/build/outputs/apk/release/*.apk

      # Signed Release AAB
      - name: Build Release AAB
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        working-directory: android
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: ./gradlew bundleRelease --no-daemon
        
      - name: Upload Release AAB
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: AIKEYS-release.aab
          path: android/app/build/outputs/bundle/release/*.aab

      # Create GitHub Release with APK
      - name: Get version info
        id: version
        run: |
          echo "tag=$(git describe --tags --abbrev=0 2>/dev/null || echo 'v1.0.0')" >> $GITHUB_OUTPUT
          echo "commit_count=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "build_date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "build-${{ steps.version.outputs.build_date }}-${{ github.run_number }}"
          release_name: "AIKEYS Wallet ${{ steps.version.outputs.tag }}-${{ steps.version.outputs.commit_count }} (${{ steps.version.outputs.build_date }})"
          body: |
            ## AIKEYS Wallet Android App
            
            **Version:** ${{ steps.version.outputs.tag }}-${{ steps.version.outputs.commit_count }}
            **Build Date:** ${{ steps.version.outputs.build_date }}
            **Commit:** ${{ steps.version.outputs.short_sha }}
            
            ### Download Links
            - **Debug APK**: For testing and development
            - **Release APK**: Production-ready signed version (if available)
            
            ### Installation Instructions
            1. Download the APK file
            2. Enable "Install from Unknown Sources" in Android Settings
            3. Install the APK file
            4. Open AIKEYS Wallet app
            
            ### What's New
            - Latest features from web platform
            - Auto-versioning with daily builds
            - Optimized performance and security
            
            **Note:** This is an automated build from the latest code changes.
          draft: false
          prerelease: false

      # Upload Debug APK to Release
      - name: Upload Debug APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/debug/app-debug.apk
          asset_name: AIKEYS-Wallet-Debug-${{ steps.version.outputs.build_date }}.apk
          asset_content_type: application/vnd.android.package-archive

      # Upload Release APK to Release (if available)
      - name: Upload Release APK to Release
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/release/app-release.apk
          asset_name: AIKEYS-Wallet-Release-${{ steps.version.outputs.build_date }}.apk
          asset_content_type: application/vnd.android.package-archive

      # Play Store Upload
      - name: Upload to Play Store
        if: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON != '' }}
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: ${{ env.PACKAGE_NAME }}
          releaseFiles: android/app/build/outputs/bundle/release/*.aab
          track: ${{ secrets.PLAY_TRACK || 'internal' }}
          status: ${{ secrets.PLAY_RELEASE_STATUS || 'draft' }
